app.name=ExampleAPI

# DB general:
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

# Local DB:
spring.datasource.url=jdbc:mysql://localhost:3306/example?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=

# Enable response compression:
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Set a server address (get IP with ipconfig in terminal, needed for connecting over local network, update also CORS settings in SecurityConfig.kt):
#server.address=192.168.1.160

# Set a different port number:
server.port=9003

# Make sure our HTTP error messages are included in the response:
server.error.include-message=always
server.error.include-binding-errors=always

# JWT: (expires_in values are in seconds) TODO: Replace secret with a proper value.
jwt.header=ExampleToken
jwt.access_expires_in=86400
jwt.refresh_expires_in=2419200
jwt.secret=queenvictoria

# Mail settings:
mail.verificationLinkPrefix=http://localhost:8081/set-password?token=
mail.passwordResetLinkPrefix=http://localhost:8081/reset-password?token=
mail.accountTransfer.ConfirmLinkPrefix=http://localhost:8081/account-transfer-confirm?tokenForOldEmail=
mail.accountTransfer.DenyLinkPrefix=http://localhost:8081/account-transfer-deny?tokenForOldEmail=
mail.accountTransfer.AcceptLinkPrefix=http://localhost:8081/account-transfer-accept?tokenForNewEmail=
mail.accountTransfer.RejectLinkPrefix=http://localhost:8081/account-transfer-reject?tokenForNewEmail=
# TODO: Fake value, make sure to get a new one from Google if you're going to use their API, and to inject it with a secret during deployment:
mail.refreshToken=1//04EQCvo8WgLA_ABCDEFGH-1234567890SDLJEGPIGSDumaEEQ0DSDLSKJDGLSJKDGLKSJDFbV-S7DV8YIUHRJKGSDFKJDSHFs

#logging.level.root=DEBUG
